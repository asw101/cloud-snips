{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "administratorLogin": {
            "defaultValue": "postgres",
            "type": "string"
        },
        "administratorLoginPassword": {
            "type": "securestring"
        },
        "location": {
            "defaultValue": "centralus",
            "type": "string"
        },
        "serverName": {
            "defaultValue": "",
            "type": "string"
        },
        "databaseName": {
            "defaultValue": "db1",
            "type": "string"
        },
        "skuCapacity": {
            "defaultValue": 1,
            "type": "int"
        },
        "skuFamily": {
            "defaultValue": "Gen5",
            "type": "string"
        },
        "skuName": {
            "defaultValue": "B_Gen5_1",
            "type": "string"
        },
        "skuSizeMB": {
            "defaultValue": 51200,
            "type": "int"
        },
        "skuTier": {
            "defaultValue": "Basic",
            "type": "string"
        },
        "version": {
            "defaultValue": "10",
            "type": "string"
        },
        "backupRetentionDays": {
            "defaultValue": 7,
            "type": "int"
        },
        "geoRedundantBackup": {
            "defaultValue": "Disabled",
            "type": "string"
        },
        "previewFeature": {
            "defaultValue": "",
            "type": "string"
        },
        "tags": {
            "defaultValue": {},
            "type": "object"
        },
        "keyvaultName": {
            "defaultValue": "",
            "type": "string"
        }
    },
    "variables": {
        "serverName": "[if(equals(parameters('serverName'), ''), concat('db-', uniqueString(resourceGroup().id)), parameters('serverName'))]",
        "keyvaultName": "[if(equals(parameters('keyvaultName'), ''), 'none', parameters('keyvaultName'))]"
    },
    "resources": [
        {
            "apiVersion": "2017-12-01-preview",
            "kind": "",
            "location": "[parameters('location')]",
            "name": "[variables('serverName')]",
            "properties": {
                "createMode":"Default",
                "version": "[parameters('version')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "storageProfile": {
                    "storageMB": "[parameters('skuSizeMB')]",
                    "backupRetentionDays": "[parameters('backupRetentionDays')]",
                    "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
                },
                "previewFeature": "[parameters('previewFeature')]"
            },
            "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('skuTier')]",
                "capacity": "[parameters('skuCapacity')]",
                "size": "[parameters('skuSizeMB')]",
                "family": "[parameters('skuFamily')]"
            },
            "tags": "[parameters('tags')]",
            "type": "Microsoft.DBforPostgreSQL/servers"
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/databases",
            "apiVersion": "2017-12-01-preview",
            "name": "[concat(variables('serverName'), '/', parameters('databaseName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "English_United States.1252"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/firewallRules",
            "apiVersion": "2017-12-01-preview",
            "name": "[concat(variables('serverName'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', variables('serverName'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "condition": "[not(equals(parameters('keyvaultName'), ''))]",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyVaultName'), '/', 'DB-PGHOST')]",
            "apiVersion": "2018-02-14",
            "properties": {
                "value": "[concat(variables('serverName'), '.postgres.database.azure.com')]"
            }
        },
        {
            "condition": "[not(equals(parameters('keyvaultName'), ''))]",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyVaultName'), '/', 'DB-PGUSER')]",
            "apiVersion": "2018-02-14",
            "properties": {
                "value": "[parameters('administratorLogin')]"
            }
        },
        {
            "condition": "[not(equals(parameters('keyvaultName'), ''))]",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyVaultName'), '/', 'DB-PGPASSWORD')]",
            "apiVersion": "2018-02-14",
            "properties": {
                "value": "[parameters('administratorLoginPassword')]"
            }
        },
        {
            "condition": "[not(equals(parameters('keyvaultName'), ''))]",
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyVaultName'), '/', 'DB-PGDATABASE')]",
            "apiVersion": "2018-02-14",
            "properties": {
                "value": "[parameters('databaseName')]"
            }
        }
    ],
    "outputs": {
        "serverName": {
            "value": "[variables('serverName')]",
            "type": "string"
        },
        "administratorLogin": {
            "value": "[parameters('administratorLogin')]",
            "type": "string"
        },
        "administratorLoginPassword": {
            "value": "[parameters('administratorLoginPassword')]",
            "type": "string"
        }
    }
}
