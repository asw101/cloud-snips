{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmName": {
            "type": "string",
            "defaultValue": "vm1",
            "metadata": {
                "description": "Name for the Virtual Machine, also used as prefix for various resources."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "username",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "allowedValues": [
                "Standard_B1ls",
                "Standard_B1s",
                "Standard_B1ms",
                "Standard_B2s",
                "Standard_F1s",
                "Standard_DS1_v2",
                "Standard_B2ms",
                "Standard_F2s_v2",
                "Standard_D2s_v3",
                "Standard_F2s",
                "Standard_E2s_v3",
                "Standard_DS2_v2",
                "Standard_B4ms"
            ],
            "metadata": {
                "description": "The Virtual Machine size."
            }
        },
        "osPublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsDesktop",
            "allowedValues": [
                "Canonical",
                "MicrosoftWindowsServer",
                "MicrosoftWindowsDesktop"
            ],
            "metadata": {
                "description": "The OS version for the VM."
            }
        },
        "osOffer": {
            "type": "string",
            "defaultValue": "Windows-10",
            "allowedValues": [
                "UbuntuServer",
                "WindowsServer",
                "Windows-10"
            ],
            "metadata": {
                "description": "The OS offer for the VM."
            }
        },
        "osSku": {
            "type": "string",
            "defaultValue": "19h1-pro",
            "allowedValues": [
                "18.04-LTS",
                "16.04.0-LTS",
                "2019-Datacenter",
                "19h1-pro"
            ],
            "metadata": {
                "description": "The OS sku for the VM."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "customDataUrl": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "URL to cloud-init script"
            }
        }
    },
    "variables": {
        "addressPrefix": "10.0.0.0/16",
        "customData": "[base64(concat('#include\n', parameters('customDataUrl')))]",
        "dnsPrefix": "[if(equals(parameters('dnsPrefix'), ''), concat(parameters('vmName'), '-', uniqueString(resourceGroup().id)), parameters('dnsPrefix'))]",
        "identityName": "[concat(resourceGroup().name, '-identity')]",
        "imageOffer": "[parameters('osOffer')]",
        "imagePublisher": "[parameters('osPublisher')]",
        "imageSku": "[parameters('osSku')]",
        "nicName": "[concat(parameters('vmName'), '-nic')]",
        "nsgName": "[concat(parameters('vmName'), '-nsg')]",
        "osConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
        },
        "publicIPAddressName": "[concat(parameters('vmName'), '-ip')]",
        "publicIPAddressType": "Dynamic",
        "scheduleShutdownName": "[concat('shutdown-computevm-', parameters('vmName'))]",
        "storageAccountName": "[concat('storage', uniquestring(resourceGroup().id))]",
        "storageAccountType": "Standard_LRS",
        "subnetName": "default",
        "subnetPrefix": "10.0.0.0/24",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
        "virtualNetworkName": "[concat(resourceGroup().name, '-vnet')]",
        "vmName": "[parameters('vmName')]",
        "vmSize": "[parameters('vmSize')]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('identityName')]",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('storageAccountType')]",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-11-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-11-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-11-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]": {}
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "windowsConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('osConfiguration'))]",
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('vmName'), '-disk-os')]",
                        "diskSizeGB": 128,
                        "createOption": "FromImage",
                        "caching": "ReadWrite"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('vmName'), '-disk-1')]",
                            "diskSizeGB": 256,
                            "createOption": "Empty",
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
                    }
                },
                "licenseType": "Windows_Client"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-06-01",
            "name": "[variables('nsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Port_22",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_80",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_443",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_3389",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 330,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_8080",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 340,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DevTestLab/schedules",
            "apiVersion": "2018-09-15",
            "name": "[variables('scheduleShutdownName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
            ],
            "properties": {
                "status": "Disabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "2359"
                },
                "timeZoneId": "Eastern Standard Time",
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
            }
        }
    ],
    "outputs": {
        "hostname": {
            "type": "string",
            "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
        }
    }
}
