{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmssName": {
            "type": "string",
            "defaultValue": "vmss1",
            "metadata": {
                "description": "Name for the Virtual Machine, also used as prefix for various resources."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3gkRpKwprN00sT7yekr0xO0F+uTllDua02puhu1v0zGu3aENvUsygBHJiTy+flgrO2q3mY9F5/D67+WHDeSpr5s71UtnbzMxTams89qmo+raTm+IqjzdNujaWf0/pbT6JUkQq0fR0BfIvg3/7NTXhlzjmCOP2EpD91LzN6b5jAm/5hXr0V5mcpERo8kk2GWxjKmwmDOV+huH1DIFDpMxT3WzR2qvZp1DZbNSYmKkrite3FHlPGLXA1I3bRQT+iTj8vRGpxOPSiMdPK4RNMEZVXSGQ3OZbSl2FBCbd/tdJ1idKo8/ZCkHxdh9/em28/yfPUK0D164shgiEdIkdOQJv",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "allowedValues": [
                "Standard_B1ls",
                "Standard_B1s",
                "Standard_B1ms",
                "Standard_B2s",
                "Standard_F1s",
                "Standard_DS1_v2",
                "Standard_B2ms",
                "Standard_F2s_v2",
                "Standard_D2s_v3",
                "Standard_F2s",
                "Standard_E2s_v3",
                "Standard_DS2_v2",
                "Standard_B4ms"
            ],
            "metadata": {
                "description": "The Virtual Machine size."
            }
        },
        "osPublisher": {
            "type": "string",
            "defaultValue": "Canonical",
            "allowedValues": [
                "Canonical",
                "MicrosoftWindowsDesktop"
            ],
            "metadata": {
                "description": "The OS version for the VM."
            }
        },
        "osOffer": {
            "type": "string",
            "defaultValue": "UbuntuServer",
            "allowedValues": [
                "UbuntuServer",
                "Windows-10"
            ],
            "metadata": {
                "description": "The OS offer for the VM."
            }
        },
        "osSku": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "18.04-LTS",
                "16.04.0-LTS",
                "19h1-pro"
            ],
            "metadata": {
                "description": "The OS sku for the VM."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "customDataUrl": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "URL to cloud-init script"
            }
        },
        "instanceCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of VM instances (100 or less)."
            },
            "maxValue": 100
        },
        "vmssTier": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": ["Standard", "Basic"],
            "metadata": {
                "description": "Tier"
            }
        },
        "vmssPriority": {
            "type": "string",
            "defaultValue": "Regular",
            "allowedValues": ["Regular", "LowPriority"],
            "metadata": {
                "description": "Priority"
            }
        },
        "vmssEvictionPolicy": {
            "type": "string",
            "defaultValue": "Deallocate",
            "allowedValues": ["Deallocate", "Delete"],
            "metadata": {
                "description": "Eviction Policy"
            }
        }
    },
    "variables": {
        "addressPrefix": "10.0.0.0/16",
        "bePoolName": "[concat(parameters('vmssName'), '-bepool')]",
        "customData": "[base64(concat('#include\n', parameters('customDataUrl')))]",
        "dnsPrefix": "[if(equals(parameters('dnsPrefix'), ''), concat(parameters('vmssName'), '-', uniqueString(resourceGroup().id)), parameters('dnsPrefix'))]",
        "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
        "httpProbeName": "httpProbe",
        "identityName": "[concat(resourceGroup().name, '-identity')]",
        "imageOffer": "[parameters('osOffer')]",
        "imagePublisher": "[parameters('osPublisher')]",
        "imageSku": "[parameters('osSku')]",
        "ipConfigName": "[concat(parameters('vmssName'), '-ipconfig')]",
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('loadBalancerName'))]",
        "loadBalancerName": "[concat(parameters('vmssName'), '-lb')]",
        "natBackendPort": 22,
        "natEndPort": 50119,
        "natPoolName": "[concat(parameters('vmssName'), '-natpool')]",
        "natStartPort": 50000,
        "nicName": "[concat(parameters('vmssName'), '-nic')]",
        "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
        "publicIPAddressName": "[concat(parameters('vmssName'), '-ip')]",
        "publicIPAddressType": "Dynamic",
        "subnetName": "default",
        "subnetPrefix": "10.0.0.0/24",
        "virtualNetworkName": "[concat(resourceGroup().name, '-vnet')]",
        "vmSize": "[parameters('vmSize')]",
        "vmssName": "[parameters('vmssName')]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "name": "[variables('identityName')]",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]"
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2018-11-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2018-11-01",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('loadBalancerName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2017-04-01",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIPAddressID')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('bePoolName')]"
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "[variables('natPoolName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "protocol": "tcp",
                            "frontendPortRangeStart": "[variables('natStartPort')]",
                            "frontendPortRangeEnd": "[variables('natEndPort')]",
                            "backendPort": "[variables('natBackendPort')]"
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "HTTPRule",
                        "properties": {
                            "loadDistribution": "Default",
                            "frontendIPConfiguration": {
                                "id": "[variables('frontEndIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat(variables('lbId'), '/probes/', variables('httpProbeName'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('httpProbeName')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[variables('vmssName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2018-06-01",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]": {}
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]",
                "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "sku": {
                "name": "[parameters('vmSize')]",
                "capacity": "[parameters('instanceCount')]",
                "tier": "[parameters('vmssTier')]"
            },
            "properties": {
                "overprovision": "true",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "priority": "[parameters('vmssPriority')]",
                    "evictionPolicy": "[if(equals(parameters('vmssPriority'), 'Regular'), json('null'), parameters('vmssEvictionPolicy'))]",
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite"
                        },
                        "imageReference": {
                            "publisher": "[variables('imagePublisher')]",
                            "offer": "[variables('imageOffer')]",
                            "sku": "[variables('imageSku')]",
                            "version": "latest"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('vmssName')]",
                        "customData": "[if(equals(parameters('customDataUrl'), ''), json('null'), variables('customData'))]",
                        "adminUsername": "azureuser",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "keyData": "[parameters('adminPasswordOrKey')]",
                                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
                                    }
                                ]
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[variables('nicName')]",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "[variables('ipConfigName')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('bePoolName'))]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('natPoolName'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            }
        }
    ],
    "outputs": {
        "ipAddress": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))).ipAddress]"
        },
        "fqdn": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))).dnsSettings.fqdn]"
        }
    }
}